pipeline {
    agent any
	tools { dockerTool 'Docker' }
    stages {
        stage('Pull from Github repository') {
            steps {
                checkout scmGit(branches: [[name: '**']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/mostafahassan725/deploy-django-chat-app']])
            }
        }
        stage('Build Django image') {
            steps {
                sh 'docker-compose -f djangoChatApp/docker-compose.yaml build --no-cache'
            }
        }
        stage('Push Django image to Docker hub') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub-password', variable: 'dockerhubpassword')]) {               
                        sh 'docker login -u mostafahassan724 -p ${dockerhubpassword}'
                        sh 'docker-compose push web asgi'
                    }
                }
            }
        }

        stage('Push Django image to ECR') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'ecr-endpoint', variable: 'ecrendpoint')]) {
                        sh 'aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin ${ecrendpoint}'
                        sh 'docker push ${ecrendpoint}/web'
                        sh 'docker push ${ecrendpoint}/asgi'
                    }
                }
            }
        }
        stage('Remove local images after successful push') {
            steps {
                sh 'docker-compose down --rmi all'
                }
        }   
    }
} 


